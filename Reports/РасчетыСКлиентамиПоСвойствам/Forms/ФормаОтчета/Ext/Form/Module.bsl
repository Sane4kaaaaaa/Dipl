
&НаКлиенте
Процедура КомандаСформиоватьОтчет(Команда)
	Отчет();
КонецПроцедуры

&НаСервере
Процедура Отчет()
	
		
//1. Предварительный этап
	ТабДок = ТабличныйДокумент; //указываем тип выходных данных
	ТабДок.Очистить();//очищаем на случай повторной формировки
	ТабДок.ТолькоПросмотр=Истина;//даем право только на просмотр
	
//2. Получаем созданный ранее макет с помощью вспомогательной процедуры
	Макет = ПолучитьМакетНаСервере("Макет"); 
	
//2.1. Получаем области макета и выводим их
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ТабДок.Вывести(ОбластьШапка);
	
	ОбластьДанные = Макет.ПолучитьОбласть("ОбластьДанные");
	
//2.1.1 Получаем данные для вывода в отчет
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.Текст =    
	
	"ВЫБРАТЬ
	|	ПокупателиОстаткиИОбороты.Клиент КАК Клиент,
	|	ПокупателиОстаткиИОбороты.НаборСвойств КАК НаборСвойств,
	|	ПокупателиОстаткиИОбороты.ДолгНачальныйОстаток КАК ДолгНачальныйОстаток,
	|	ПокупателиОстаткиИОбороты.ДолгКонечныйОстаток КАК ДолгКонечныйОстаток,
	|	ПокупателиОстаткиИОбороты.ДолгПриход КАК ДолгПриход,
	|	ПокупателиОстаткиИОбороты.ДолгРасход КАК ДолгРасход
	|ИЗ
	|	РегистрНакопления.Покупатели.ОстаткиИОбороты (, , , , НаборСвойств В 
	|		(ВЫБРАТЬ
	|			ЗначенияСвойствКлиентов.НаборСвойств КАК НаборСвойств 
	|       ИЗ
	|			РегистрСведений.ЗначенияСвойствКлиентов КАК ЗначенияСвойствКлиентов
	|		ГДЕ   ";
				Если не Отчет.Клиент.Пустая() Тогда
					ЗапросДанных.Текст = ЗапросДанных.Текст +
				"ЗначенияСвойствКлиентов.НаборСвойств.Владелец = &Клиент
	|			И";
				КонецЕсли;
				ЗапросДанных.Текст = ЗапросДанных.Текст + 
				" ЗначенияСвойствКлиентов.ВидСвойства = &ВидСвойства
	|			И ЗначенияСвойствКлиентов.Значение = &Значение ))
	|			КАК ПокупателиОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Клиент";   
				
	Если Не Отчет.Клиент.Пустая()Тогда 
		ЗапросДанных.УстановитьПараметр("Клиент", Отчет.Клиент);
	КонецЕсли;
	
	ЗапросДанных.УстановитьПараметр("ВидСвойства", Отчет.Свойство);
	ЗапросДанных.УстановитьПараметр("Значение", Отчет.ЗначениеСвойства);
	
	ВыборкаДанных = ЗапросДанных.Выполнить().Выбрать();
	
	//2.1.2 Тут будет производиться заполнение полученных данных 
	Пока ВыборкаДанных.Следующий() Цикл 
		ОбластьДанные.Параметры.Клиенты = ВыборкаДанных.Клиент; 
		ОбластьДанные.Параметры.НаборСвойствКлиентов = ВыборкаДанных.НаборСвойств; 
		ОбластьДанные.Параметры.ДолгНачальныйОстаток = ВыборкаДанных.ДолгНачальныйОстаток; 
		ОбластьДанные.Параметры.ДолгПриход = ВыборкаДанных.ДолгПриход; 
		ОбластьДанные.Параметры.ДолгРасход = ВыборкаДанных.ДолгРасход; 
		ОбластьДанные.Параметры.ДолгКонечныйОстаток = ВыборкаДанных.ДолгКонечныйОстаток; 
		ТабДок.Вывести(ОбластьДанные, ВыборкаДанных.Уровень()); 
	КонецЦикла; 
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.МасштабПечати = 100;
	
	ТабДок.РазмерСтраницы = "A4";
	ТабДок.ТочностьПечати = ТочностьПечати.Точная;


	
	
	
КонецПроцедуры

//ВСПОМОГАТЕЛЬНОЕ

&НаСервере
Функция ПолучитьМакетНаСервере(ИмяМакета)
	
	ЭО=РеквизитФормыВЗначение("Отчет");  
	Макет=ЭО.ПолучитьМакет(ИмяМакета);
	Возврат Макет;
	
КонецФункции
