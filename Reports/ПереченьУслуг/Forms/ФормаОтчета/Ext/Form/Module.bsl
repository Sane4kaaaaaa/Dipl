
&НаКлиенте
Процедура КомандаСформироватьОтчет(Команда)
	Отчет();
КонецПроцедуры  

&НаСервере
Процедура Отчет()
	
	//1. Предварительный этап
	ТабДок = ТабличныйДокумент; // указываем тип выходных данных
	ТабДок.Очистить(); // очищаем на случай повторной формировки
	ТабДок.ТолькоПросмотр = Истина; //даем право только на просмотр

//2. Получаем созданный ранее макет с помощью вспомогательной процедуры
	Макет = ПолучитьМакетНаСервере ("Макет");

//2.1. Получаем области макета и выводим их
	ОбластьЗаголовок = Макет .ПолучитьОбласть ("ОбластьЗаголовок") ;
	ТабДок.Вывести (ОбластьЗаголовок) ;

	ОбластьШапка = Макет .ПолучитьОбласть ("ОбластьШапка") ;
	ТабДок. Вывести (ОбластьШапка) ;

//областьгруппаУслугИерархия = Макет .Получитьобласть ("ОбластьГруппаУслугИерархия") ;
	ОбластьГруппаУслуг = Макет .Получитьобласть ("ОбластьГруппаУслуг") ;
    ОбластьДанные = Макет.ПолучитьОбласть ("ОбластьДанные");
    ОбластьИтоги = Макет .Получитьобласть ("ОбластьИтоги") ;

//2.1.1 Получаем данные для вывода в отчет
	ЗапросДанных = Новый Запрос;
	ЗапросДанных.Текст =	
	"ВЫБРАТЬ
	|	спрНоменклатура.ЭтоГруппа КАК ЭтоГруппа,
	|	спрНоменклатура.Родитель КАК ГруппаУслуг,
	|	спрНоменклатура.Ссылка КАК Услуга,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	Справочник.Номенклатура КАК спрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаОтчета, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = спрНоменклатура.Ссылка
	|ГДЕ
	|	спрНоменклатура.Родитель В ИЕРАРХИИ(&ГруппаВыбора)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаУслуг,
	|	Услуга
	|ИТОГИ
	|	СУММА(Цена)
	|ПО
	|	ОБЩИЕ,
	|	ГруппаУслуг ИЕРАРХИЯ"; 
	
	//2.1.1.1 Определяем значения параметров запроса
	Группа = Справочники. Номенклатура .НайтиПоНаименованию ("Услуги") ;

	ЗапросДанных.УстановитьПараметр ("ГруппаВыбора", Группа);
	ЗапросДанных.УстановитьПараметр ("ДатаОтчета", КонецДня (ЭтаФорма .ДатаОтчета));

 

	//2.1.1.2 Получаем выборку данных
	ВыборкаГруппаУслуг = ЗапросДанных.Выполнить () .Выбрать (ОбходРезультатаЗапроса .ПоГруппировкам, "ГруппаУслуг");
	ВыборкаОбщийИтог = ЗапросДанных.Выполнить () .Выбрать (ОбходРезультатаЗапроса.ПоГруппировкам) ;

 

//2.1.2 Проводим заполнение данных в цикле

	//2.1.2.1 Пропускаем первую строку результата запроса
		// (в ней содержится значение общего итога)

	ВыборкаГруппаУслуг.Следующий();
	
	Табдок.НачатьАвтогруппировкуСтрок() ;

	//2.1.2.2 Получаем данные выборки и передаем их в нужную область

	Пока ВыборкаГруппаУслуг.Следующий() Цикл
		ОбластьГруппаУслуг.Параметры.ГруппаУслуг = ВыборкаГруппаУслуг.ГруппаУслуг;
		ОбластьГруппаУслуг.Параметры.Цена = ВыборкаГруппаУслуг.Цена;
		Табдок.Вывести(ОбластьГруппаУслуг, ВыборкаГруппауслуг.Уровень (),,Ложь);

 		Выборкаданных = ВыборкаГруппаУслуг. Выбрать ();
		ВыборкаДанных.Следующий () ;
		Пока ВыборкаДанных. Следующий () Цикл
			Если НЕ ВыборкаДанных.ЭтоГруппа Тогда
				ОбластьДанные .Параметры.Услуга = ВыборкаДанных. Услуга;
				ОбластьДанные .Параметры.Цена = Выборкаданных. Цена;
				ТабДок.Вывести(ОбластьДанные, ВыборкаДанных.Уровень (),,Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

 

	ТабДок.ЗакончитьАвтогруппировкуСтрок();

//2.1.3 Проводим вывод итогов
	ВыборкаОбщийИтог.Следующий () ;
	ОбластьИтоги.Параметры.Цена = ВыборкаОбщийитог. Цена;
	Табдок.Вывести (ОбластьИтоги) ;

//3. Заключительный этап - настройка вывода табличного документа

Табдок.ОриентацияСтраницы = ОриентацияСтраницы. Портрет;
ТабДок.МасштабПечати = 100; // это значит что масштаб будет 100 процентов

Табдок.РазмерСтраницы = "A4";
табдок.ТочностьПечати = ТочностьПечати. Точная;

	
	
	
КонецПроцедуры	


//ВСПОМОГАТЕЛЬНОЕ
&НаСервере
Функция ПолучитьМакетНаСервере(ИмяМакета)
	
	ЭО = РеквизитФормыВЗначение("Отчет");
	Макет = ЭО.ПолучитьМакет(ИмяМакета);
	Возврат Макет;
КонецФункции

