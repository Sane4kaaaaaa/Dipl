Процедура ПерерасчитатьНачисления(ТребуемыйВидРасчета) Экспорт
		
	Запрос = новый Запрос (
	"ВЫБРАТЬ
	| НачисленияПерерасчет.ОбъектПерерасчета,
	| НачисленияПерерасчет.Сотрудник
	|ИЗ
	| РегистрРасчета.Начисления.Перерасчет
	| КАК НачисленияПерерасчет
	|
	|ГДЕ
	| НачисленияПерерасчет.ВидРасчета = &ТребуемыйвидРасчета
	|
	|ИТОГИ ПО НачисленияПерерасчет.ОбъектПерерасчета");

	Запрос.УстановитьПараметр("ТребуемыйВидРасчета", ТребуемыйВидРасчета);

	СписокСотрудников = Новый СписокЗначений;

	//перебрать группировку по регистратору
	ВыборкаПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаПоРегистратору.Следующий() цикл
	Регистратор = ВыборкаПоРегистратору.ОбъектПерерасчета;
	//перебрать группировку по сотрудникам
	//для выбранного регистратора
	//и создать список сотрудников
	ВыборкаПоСотрудникам = ВыборкаПоРегистратору.Выбрать();
	СписокСотрудников.Очистить();

	Пока ВыборкаПоСотрудникам.Следующий() цикл
	СписокСотрудников.Добавить(ВыборкаПоСотрудникам.Сотрудник);
	КонецЦикла;

	//получить набор записей регистра расчета
	//для выбранного регистратора

	НаборЗаписей = РегистрыРасчета.Начисления.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Значение = Регистратор;
	НаборЗаписей.Прочитать();
	РассчитатьНачисления(НаборЗаписей, ТребуемыйВидРасчета,СписокСотрудников) ;
	НаборЗаписей.Записать(, Истина);

	//очистить перерасчитанные записи в перерасчете
	НаборЗаписейПерерасчета = РегистрыРасчета.Начисления.Перерасчеты.Перерасчет.СоздатьНаборЗаписей();
	НаборЗаписейПерерасчета.Отбор.ОбъектПерерасчета.Значение = Регистратор;
	НаборЗаписейПерерасчета.Записать();	  
	КонецЦикла;

КонецПроцедуры
	
Процедура РассчитатьНачисления(НаборЗаписейРегистра, ТребуемыйВидРасчета, СписокСотрудников) Экспорт
	
Регистратор = НаборЗаписейРегистра.Отбор.Регистратор.Значение;	
	
//Рассчитать первичные записи  

Если ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Оклад Тогда
	//Рассчитать вторичнык записи 
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
	|	НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
	|											И ВидРасчета = &ВидРасчета
	|											И Сотрудник В (&СписокСотрудников)) 
	|КАК НачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", НаборЗаписейРегистра.Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
	Для Каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
		СтруктураНомер = Новый Структура("НомерСтроки");
		СтруктураНомер.НомерСтроки=ЗаписьРегистра.НомерСтроки;
		ВыборкаРезультата.Сбросить();
		Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
			Если ВыборкаРезультата.Норма = 0 Тогда
				Сообщить("Вид расчета: оклад - Нет рабочих дней в заданном периоде", );
				ЗаписьРегистра.Результат = 0;
			Иначе
				//Рассчитать оклад по фактическому периоду и исхлдным данным
				ЗаписьРегистра.Результат= (ЗаписьРегистра.ИсходныеДанные/ВыборкаРезультата.Норма) * ВыборкаРезультата.Факт;
				Сообщить("Выполнен рсчет " + ЗаписьРегистра.Регистратор + " - "
					+ ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник, );
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
ИначеЕсли ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Премия Тогда
	запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияБазаНачисления.РезультатБаза КАК База,
	|	НачисленияБазаНачисления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.Начисления.БазаНачисления(
	|			&ИзмеренияОсновного,
	|			&ИзмеренияБазового,
	|			,
	|			Регистратор = &Регистратор
	|				И ВидРасчета = &ВидРасчета
	|				И Сотрудник В (&СписокСотрудников)) КАК НачисленияБазаНачисления";
	
	Измер = Новый Массив (1);
	Измер[0] = "Сотрудник"; 
	
	Запрос.УстановитьПараметр("ИзмеренияОсновного", Измер); 
	Запрос.УстановитьПараметр("ИзмеренияБазового", Измер);
	Запрос.УстановитьПараметр("Регистратор", Регистратор);
	Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);  
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
	Для Каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
		СтруктураНомер = Новый Структура ("НомерСтроки");
		СтруктураНомер.НомерСтроки = ЗаписьРегистра.НомерСтроки;
		ВыборкаРезультата.Сбросить();
		Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
			ЗаписьРегистра.Результат = ВыборкаРезультата.База * (10/100);
			Сообщить("Выполнен расчет " + ЗаписьРегистра.Регистратор + " - " +
			ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник, );
		КонецЕсли;
	КонецЦикла;
	
ИначеЕсли ТребуемыйВидРасчета = ПланыВидовРасчета.ОсновныеНачисления.Больничный Тогда
	запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ
	|	НачисленияДанныеГрафика.ЗначениеПериодДействия КАК Норма,
	|	НачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	НачисленияДанныеГрафика.НомерСтроки КАК НомерСтроки,
	|	КомпенсацияДняБольничного.Сотрудник,
	|	КомпенсацияДняБольничного.Компенсация КАК Компенсация
	|ИЗ
	|   РегистрСведений.КомпенсацияДняБольничного КАК КомпенсацияДняБольничного,
	|	РегистрРасчета.Начисления.ДанныеГрафика(Регистратор = &Регистратор
	|											И ВидРасчета = &ВидРасчета
	|											И Сотрудник В (&СписокСотрудников)) 
	|КАК НачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", НаборЗаписейРегистра.Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ВидРасчета", ТребуемыйВидРасчета);
	Запрос.УстановитьПараметр("СписокСотрудников", СписокСотрудников);
	
	ВыборкаРезультата = Запрос.Выполнить().Выбрать();
	
	Для Каждого ЗаписьРегистра Из НаборЗаписейРегистра Цикл
		СтруктураНомер = Новый Структура("НомерСтроки");
		СтруктураНомер.НомерСтроки=ЗаписьРегистра.НомерСтроки;
		ВыборкаРезультата.Сбросить();
		Если ВыборкаРезультата.НайтиСледующий(СтруктураНомер) Тогда
			//Рассчитать больничный по фактическому периоду и исхлдным данным
			ЗаписьРегистра.Результат= ВыборкаРезультата.Компенсация * ВыборкаРезультата.Факт;
			Сообщить("Выполнен рсчет " + ЗаписьРегистра.Регистратор + " - "
				+ ЗаписьРегистра.ВидРасчета + " - " + ЗаписьРегистра.Сотрудник, );
		КонецЕсли;
	КонецЦикла;


	 
КонецЕсли;

КонецПроцедуры